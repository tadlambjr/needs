<%
  # Parameters expected:
  # - weeks: Array of weeks, each week is an array of dates
  # - needs_by_date: Hash of dates to needs
  # - calendar_start: Start date of calendar
  # - calendar_end: End date of calendar
  # - current_month: Current month for highlighting (optional)
  # - upcoming_signups: User's upcoming signups (optional, for home calendar)
  # - show_past_opacity: Boolean to show past dates with opacity (default: false)
  # - min_height: Minimum height of each cell (default: 120)
  # - max_events_shown: Maximum number of events to show per day (default: 3)
  
  current_month ||= Date.today
  upcoming_signups ||= []
  show_past_opacity ||= false
  min_height ||= 120
  max_events_shown ||= 3
  has_gaps = local_assigns[:has_gaps] || false
%>

<!-- Day cells and events grid -->
<% 
  # Pre-calculate max events per week for proper sizing
  week_event_counts = weeks.map do |week|
    max_events_in_week = 0
    week.each do |date|
      day_needs = needs_by_date[date]
      sorted_needs = day_needs.sort_by do |need|
        is_multi_day = need.start_date != need.end_date
        [is_multi_day ? 0 : 1, need.start_date]
      end
      events_count = [sorted_needs.count, max_events_shown].min
      max_events_in_week = [max_events_in_week, events_count].max
    end
    max_events_in_week
  end
%>

<% weeks.each_with_index do |week, week_index| %>
  <% 
    # Calculate height for this week based on max events
    max_events = week_event_counts[week_index]
    week_height = [min_height, 32 + (max_events * 26) + 10].max
  %>
  
  <!-- Week row container -->
  <div class="grid grid-cols-7 <%= 'gap-px' if has_gaps %> <%= 'bg-gray-200 dark:bg-gray-700' if has_gaps %> relative overflow-hidden" style="min-height: <%= week_height %>px;">
    <% 
      # Track which needs we've already rendered in this week
      rendered_needs = Set.new
    %>
    
    <!-- Day cells -->
    <% week.each do |date| %>
      <% 
        is_today = date == Date.today
        is_past = date < Date.today
        is_current_month = date.month == current_month.month
        user_signed_up = upcoming_signups.any? { |s| 
          s.specific_date == date || (!s.specific_date && date >= s.need.start_date && date <= s.need.end_date)
        }
      %>
      
      <div class="relative p-1.5 sm:p-2 flex flex-col
                  <%= has_gaps ? 'bg-white dark:bg-gray-800' : 'border-r border-b border-gray-200 dark:border-gray-700' %>
                  <%= 'bg-indigo-50 dark:bg-indigo-900/20' if is_today && !has_gaps %>
                  <%= 'bg-blue-50 dark:bg-blue-900/20' if is_today && has_gaps %>
                  <%= show_past_opacity && is_past ? 'opacity-50' : '' %>
                  <%= !is_current_month && !has_gaps ? 'bg-gray-50 dark:bg-gray-900' : '' %>
                  <%= !is_current_month && has_gaps ? 'opacity-40' : '' %>
                  <%= !has_gaps ? 'transition-all hover:bg-gray-50 dark:hover:bg-gray-700/50' : '' %>">
        
        <!-- Date number -->
        <div class="flex items-center justify-between mb-0.5 sm:mb-1 relative z-20">
          <span class="text-xs sm:text-sm font-semibold 
                      <%= is_today && !has_gaps ? 'text-indigo-600 dark:text-indigo-400' : '' %>
                      <%= is_today && has_gaps ? 'text-blue-600 dark:text-blue-400' : '' %>
                      <%= !is_today ? 'text-gray-700 dark:text-gray-300' : '' %>">
            <%= date.day %>
          </span>
          
          <% if user_signed_up %>
            <span class="w-1.5 h-1.5 sm:w-2 sm:h-2 bg-green-500 rounded-full" title="You're signed up"></span>
          <% end %>
        </div>
      </div>
    <% end %>
    
    <!-- Events overlay for this week -->
    <div class="absolute inset-0 pointer-events-none">
      <% week.each_with_index do |date, day_index| %>
        <% 
          day_needs = needs_by_date[date]
          # Sort so multi-day events come first (will be rendered on top), then single-day events
          sorted_needs = day_needs.sort_by do |need|
            is_multi_day = need.start_date != need.end_date
            # Multi-day events get 0, single-day get 1, so multi-day sorts first
            [is_multi_day ? 0 : 1, need.start_date]
          end
          events_to_show = sorted_needs.take(max_events_shown)
        %>
        
        <% events_to_show.each_with_index do |need, event_index| %>
          <% 
            # Only render if we haven't already shown this need in this week
            next if rendered_needs.include?(need.id)
            rendered_needs.add(need.id)
            
            # Calculate span days for this week
            week_start = week.first
            week_end = week.last
            event_start = [need.start_date, week_start].max
            event_end = [need.end_date, week_end].min
            span_days = (event_end - event_start).to_i + 1
            
            # Calculate exact positioning
            cell_width_percent = 100.0 / 7
            left_percent = day_index * cell_width_percent
            width_percent = span_days * cell_width_percent
            
            # Position from top of week row, accounting for date number height (30px) and some margin
            top_px = 32 + (event_index * 26)
            
            # Calculate z-index: earlier events (lower event_index) should be on top
            # Start from a high number and subtract event_index
            z_index = 50 - event_index
            
            # Check if user is signed up
            user_signed_up = need.need_signups.any? { |signup| signup.user_id == Current.user.id && signup.status.in?(['signed_up', 'waitlist']) }
            
            # Calculate gap adjustment if calendar has gaps
            gap_adjustment = has_gaps ? day_index : 0
          %>
          
          <%= link_to need_path(need), class: "pointer-events-auto absolute", 
              style: "top: #{top_px}px; left: calc(#{left_percent}% + #{gap_adjustment}px + 0.375rem); width: calc(#{width_percent}% - 0.75rem - #{gap_adjustment > 0 ? 1 : 0}px); z-index: #{z_index};" do %>
            <div class="text-xs p-1 rounded overflow-hidden transition-colors
                        <%= user_signed_up ? 'bg-green-100 dark:bg-green-900/30 text-green-800 dark:text-green-200' : need.full? ? 'bg-gray-200 dark:bg-gray-700 text-gray-600 dark:text-gray-400' : 'bg-indigo-100 dark:bg-indigo-900 text-indigo-700 dark:text-indigo-300 hover:bg-indigo-200 dark:hover:bg-indigo-800' %>"
                 style="border-left: 2px solid <%= need.category.color %>;"
                 title="<%= need.title %>">
              <span class="hidden sm:inline whitespace-nowrap overflow-hidden text-ellipsis"><%= need.title %></span>
              <span class="sm:hidden whitespace-nowrap overflow-hidden text-ellipsis"><%= need.title.truncate([span_days * 8, 20].min) %></span>
            </div>
          <% end %>
        <% end %>
        
        <!-- More indicator -->
        <% if sorted_needs.count > max_events_shown %>
          <% 
            # Check if any of the extra needs start on this day or haven't been shown yet
            extra_needs = sorted_needs.drop(max_events_shown)
            should_show_more = extra_needs.any? { |n| !rendered_needs.include?(n.id) && (n.start_date == date || n.start_date < week.first) }
          %>
          <% if should_show_more %>
            <% 
              cell_width_percent = 100.0 / 7
              left_percent = day_index * cell_width_percent
              top_px = 32 + (max_events_shown * 26)
              gap_adjustment = has_gaps ? day_index : 0
            %>
            <div class="absolute text-xs text-gray-500 dark:text-gray-400" 
                 style="top: #{top_px}px; left: calc(#{left_percent}% + #{gap_adjustment}px + 0.375rem); z-index: 5;">
              +<%= sorted_needs.count - max_events_shown %>
            </div>
          <% end %>
        <% end %>
      <% end %>
    </div>
  </div>
<% end %>
